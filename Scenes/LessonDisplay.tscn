[gd_scene load_steps=16 format=3 uid="uid://ev637p2eaegs"]

[ext_resource type="Theme" uid="uid://b0y0a3w6ab13e" path="res://Assets/ui_font.tres" id="1_5p2y4"]
[ext_resource type="Shortcut" uid="uid://c2biw5174i2sc" path="res://Shortcuts/EscapeKey.tres" id="2_0oong"]

[sub_resource type="GDScript" id="GDScript_ef2ke"]
script/source = "# TextPageViewer.gd
extends Control

@onready var title_label:= %TitleLabel
@onready var content_text:= %ContentText
@onready var prev_button:= %PrevButton
@onready var next_button:= %NextButton

'''
A lesson section has: 
	id: int, 
	lesson_id: int, 
	order: int, 
	content_page_title: string, 
	content: string
'''

### This should contain \"lesson_id\": integer
var previous_scene_data: Dictionary

var pages: Array = []  
var current_page_index: int = -1:
	set(value):
		current_page_index = value
		update_display()

func _ready() -> void:
	setup()

func load_level_parameters():
	previous_scene_data = NavigationManager.get_cached_data()

func setup() -> void:
	load_level_parameters()
	
	if not previous_scene_data.has(\"lesson_id\"):
		push_error(\"Missing lesson_id in scene data\")
		return
	
	var lesson_id := previous_scene_data[\"lesson_id\"] as int
	var db_results = DatabaseManager.select_all_from_table_where(
		DatabaseManager.LESSON_SECTION_TABLE,
		\"lesson_id = ?\",  # Parameterized query
		[lesson_id],      # Bound parameters
		\"order\"           # Order column
	)
	
	
	# Format results with proper escaping
	var formatted_pages = []
	for entry in db_results:
		formatted_pages.append({
			\"title\": entry.get(\"content_page_title\", \"\"),
			\"content\": entry.get(\"content\", \"\")
		})
	
	set_pages(formatted_pages)

func set_pages(new_pages: Array) -> void:
	pages = new_pages
	current_page_index = 0 if pages.size() > 0 else -1

func update_display() -> void:
	# Update text content
	if current_page_index >= 0 && current_page_index < pages.size():
		title_label.text = pages[current_page_index].get(\"title\", \"\")
		content_text.text = pages[current_page_index].get(\"content\", \"\")
	else:
		title_label.text = \"\"
		content_text.text = \"\"
	
	# Update button visibility
	prev_button.visible = current_page_index > 0
	next_button.visible = current_page_index < pages.size() - 1

func _on_prev_button_pressed() -> void:
	if current_page_index > 0:
		current_page_index -= 1

func _on_next_button_pressed() -> void:
	if current_page_index < pages.size() - 1:
		current_page_index += 1

func _on_go_back_button_pressed() -> void:
	NavigationManager.go_back()
"

[sub_resource type="InputEventKey" id="InputEventKey_c64i7"]
device = -1
keycode = 4194319

[sub_resource type="InputEventKey" id="InputEventKey_2drha"]
device = -1
keycode = 65
unicode = 97

[sub_resource type="InputEventKey" id="InputEventKey_e8ipp"]
device = -1
keycode = 4194323

[sub_resource type="InputEventKey" id="InputEventKey_cjge3"]
device = -1
keycode = 4194320

[sub_resource type="InputEventMouseButton" id="InputEventMouseButton_0oong"]
button_index = 4

[sub_resource type="Shortcut" id="Shortcut_enquj"]
events = [SubResource("InputEventKey_c64i7"), SubResource("InputEventKey_2drha"), SubResource("InputEventKey_e8ipp"), SubResource("InputEventKey_cjge3"), SubResource("InputEventMouseButton_0oong")]

[sub_resource type="InputEventKey" id="InputEventKey_kvy1s"]
device = -1
keycode = 4194321

[sub_resource type="InputEventKey" id="InputEventKey_0wn1j"]
device = -1
keycode = 68
unicode = 100

[sub_resource type="InputEventKey" id="InputEventKey_u63yc"]
device = -1
keycode = 4194324

[sub_resource type="InputEventKey" id="InputEventKey_lycwr"]
device = -1
keycode = 4194322

[sub_resource type="InputEventMouseButton" id="InputEventMouseButton_c64i7"]
button_index = 5

[sub_resource type="Shortcut" id="Shortcut_p22f4"]
events = [SubResource("InputEventKey_kvy1s"), SubResource("InputEventKey_0wn1j"), SubResource("InputEventKey_u63yc"), SubResource("InputEventKey_lycwr"), SubResource("InputEventMouseButton_c64i7")]

[node name="Control" type="Control"]
layout_mode = 3
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2
size_flags_vertical = 3
theme = ExtResource("1_5p2y4")
script = SubResource("GDScript_ef2ke")

[node name="TitleLabel" type="Label" parent="."]
unique_name_in_owner = true
custom_minimum_size = Vector2(0, 30)
layout_mode = 2
offset_top = 64.0
offset_right = 1024.0
offset_bottom = 128.0
theme_override_font_sizes/font_size = 30
vertical_alignment = 1

[node name="VBoxContainer" type="VBoxContainer" parent="."]
layout_mode = 1
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
offset_left = 128.0
offset_top = 128.0
offset_right = -128.0
grow_horizontal = 2
grow_vertical = 2
alignment = 1

[node name="ContentText" type="TextEdit" parent="VBoxContainer"]
unique_name_in_owner = true
custom_minimum_size = Vector2(0, 300)
layout_mode = 2
size_flags_vertical = 3
wrap_mode = 1

[node name="HBoxContainer" type="HBoxContainer" parent="VBoxContainer"]
layout_mode = 2
alignment = 1

[node name="PrevButton" type="Button" parent="VBoxContainer/HBoxContainer"]
unique_name_in_owner = true
layout_mode = 2
shortcut = SubResource("Shortcut_enquj")
text = "Previous"

[node name="NextButton" type="Button" parent="VBoxContainer/HBoxContainer"]
unique_name_in_owner = true
layout_mode = 2
shortcut = SubResource("Shortcut_p22f4")
text = "Next"

[node name="GoBackButton" type="Button" parent="."]
layout_mode = 0
offset_top = 8.0
offset_right = 66.0
offset_bottom = 36.0
shortcut = ExtResource("2_0oong")
text = "Back..."

[connection signal="pressed" from="VBoxContainer/HBoxContainer/PrevButton" to="." method="_on_prev_button_pressed"]
[connection signal="pressed" from="VBoxContainer/HBoxContainer/NextButton" to="." method="_on_next_button_pressed"]
[connection signal="pressed" from="GoBackButton" to="." method="_on_go_back_button_pressed"]
