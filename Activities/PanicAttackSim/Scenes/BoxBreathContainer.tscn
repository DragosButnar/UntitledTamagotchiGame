[gd_scene load_steps=7 format=3 uid="uid://hxtwskieyekp"]

[ext_resource type="Texture2D" uid="uid://blco6sx1koyhk" path="res://Assets/square.png" id="1_mlrcx"]
[ext_resource type="Texture2D" uid="uid://m24e71k80dau" path="res://Assets/up_arrow.png" id="3_m3uep"]
[ext_resource type="Texture2D" uid="uid://cwgn5uyhwug7c" path="res://Assets/space_icon.png" id="4_ja6e1"]
[ext_resource type="Texture2D" uid="uid://brliaponq3475" path="res://Assets/down_arrow.png" id="5_4vpn4"]

[sub_resource type="GDScript" id="GDScript_bih1m"]
script/source = "extends Node

@onready var progress := %ProgressBar
@onready var instruction_label := %InstructionLabel
@onready var time_label := %TimeLabel
@onready var indicator := %AnimatedSprite2D


@export var MAX_CYCLES := 2

var current_cycles := 0

func _ready() -> void:
	current_cycles = 0
	set_process_input(true)
	reset_progress()
	update_step(progress.value)
	update_instruction()
	update_time()
	update_indicator()

var _current_step:
	get(): return _current_step
	set(step): _current_step = step
	

func reset_progress():
	progress.value = 0

func update_indicator():
	match _current_step:
		\"Inhale\":
			indicator.show()
			indicator.play(\"up\")
		\"Hold\":
			indicator.show()
			indicator.play(\"space\")
		\"Exhale\":
			indicator.show()
			indicator.play(\"down\")
		\"Pause\":
			indicator.hide()

func update_step(value):
	value = int(value) / 200 as int
	match value:
		0:
			_current_step =	\"Inhale\"
		1:
			_current_step = \"Hold\"
		2:
			_current_step = \"Exhale\"
		3:
			_current_step = \"Pause\"
		4:
			current_cycles += 1
			if current_cycles == MAX_CYCLES:
				var earning_text := GameManager.try_grant_activity_reward()
				GameManager.leave_scene.emit(earning_text)
			reset_progress()

func update_instruction():
	instruction_label.text = _current_step

func update_time():
	time_label.text = str(5 - int(progress.value) % 200 / 40 as int)

func _process(delta: float) -> void:
	if !Input.is_anything_pressed() and _current_step == \"Pause\":
		if Engine.get_frames_drawn() % 2 == 0:
			increase_progress()
	
func _input(event: InputEvent) -> void:
	if Input.is_key_pressed(KEY_UP) and _current_step == \"Inhale\":
		increase_progress()
	elif Input.is_key_pressed(KEY_SPACE) and _current_step == \"Hold\":
		increase_progress()
	elif Input.is_key_pressed(KEY_DOWN) and _current_step == \"Exhale\":
		increase_progress()

func increase_progress(value: int = progress.step):
	if progress.value + value <= progress.max_value:
		progress.value += value
	

func _on_progress_bar_value_changed(value: float) -> void:
	update_step(value)
	update_instruction()
	update_time()
	update_indicator()
"

[sub_resource type="SpriteFrames" id="SpriteFrames_al1wi"]
animations = [{
"frames": [{
"duration": 1.0,
"texture": ExtResource("5_4vpn4")
}],
"loop": true,
"name": &"down",
"speed": 5.0
}, {
"frames": [],
"loop": true,
"name": &"none",
"speed": 5.0
}, {
"frames": [{
"duration": 1.0,
"texture": ExtResource("4_ja6e1")
}],
"loop": true,
"name": &"space",
"speed": 5.0
}, {
"frames": [{
"duration": 1.0,
"texture": ExtResource("3_m3uep")
}],
"loop": true,
"name": &"up",
"speed": 5.0
}]

[node name="BoxBreathContainer" type="Node"]
script = SubResource("GDScript_bih1m")

[node name="InstructionLabel" type="Label" parent="."]
unique_name_in_owner = true
offset_left = 8.0
offset_top = 80.0
offset_right = 48.0
offset_bottom = 100.0
scale = Vector2(1.502, 1)
theme_override_font_sizes/font_size = 10
text = "Inhale"
horizontal_alignment = 1
vertical_alignment = 1

[node name="TimeLabel" type="Label" parent="."]
unique_name_in_owner = true
offset_left = 22.0
offset_top = 15.0
offset_right = 35.0
offset_bottom = 35.0
scale = Vector2(3.59628, 2.39752)
text = "5"
horizontal_alignment = 1
vertical_alignment = 1

[node name="ProgressBar" type="TextureProgressBar" parent="."]
unique_name_in_owner = true
offset_right = 48.0
offset_bottom = 48.0
scale = Vector2(1.67458, 1.67458)
max_value = 800.0
fill_mode = 4
radial_initial_angle = 225.0
nine_patch_stretch = true
texture_under = ExtResource("1_mlrcx")
texture_progress = ExtResource("1_mlrcx")
tint_under = Color(0.272655, 0.272655, 0.272655, 1)
tint_over = Color(0.341584, 0.341584, 0.341584, 1)
tint_progress = Color(0, 1, 1, 1)

[node name="AnimatedSprite2D" type="AnimatedSprite2D" parent="."]
unique_name_in_owner = true
position = Vector2(96, 40)
scale = Vector2(0.507305, 0.507305)
sprite_frames = SubResource("SpriteFrames_al1wi")
animation = &"none"

[connection signal="value_changed" from="ProgressBar" to="." method="_on_progress_bar_value_changed"]
